// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { maybeFilter } from 'e-invoice-api-mcp/filtering';
import { Metadata, asTextContentResult } from 'e-invoice-api-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import EInvoice from 'e-invoice-api';

export const metadata: Metadata = {
  resource: 'documents',
  operation: 'read',
  tags: [],
  httpMethod: 'get',
  httpPath: '/api/documents/{document_id}',
  operationId: 'get_document_api_documents__document_id__get',
};

export const tool: Tool = {
  name: 'retrieve_documents',
  description:
    "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nGet an invoice or credit note by ID\n\n# Response Schema\n```json\n{\n  $ref: '#/$defs/document_response',\n  $defs: {\n    document_response: {\n      type: 'object',\n      title: 'DocumentResponse',\n      properties: {\n        id: {\n          type: 'string',\n          title: 'Id'\n        },\n        amount_due: {\n          type: 'string',\n          title: 'Amount Due'\n        },\n        attachments: {\n          type: 'array',\n          title: 'Attachments',\n          items: {\n            $ref: '#/$defs/document_attachment'\n          }\n        },\n        billing_address: {\n          type: 'string',\n          title: 'Billing Address'\n        },\n        billing_address_recipient: {\n          type: 'string',\n          title: 'Billing Address Recipient'\n        },\n        currency: {\n          $ref: '#/$defs/currency_code'\n        },\n        customer_address: {\n          type: 'string',\n          title: 'Customer Address'\n        },\n        customer_address_recipient: {\n          type: 'string',\n          title: 'Customer Address Recipient'\n        },\n        customer_email: {\n          type: 'string',\n          title: 'Customer Email'\n        },\n        customer_id: {\n          type: 'string',\n          title: 'Customer Id'\n        },\n        customer_name: {\n          type: 'string',\n          title: 'Customer Name'\n        },\n        customer_tax_id: {\n          type: 'string',\n          title: 'Customer Tax Id'\n        },\n        direction: {\n          $ref: '#/$defs/document_direction'\n        },\n        document_type: {\n          $ref: '#/$defs/document_type'\n        },\n        due_date: {\n          type: 'string',\n          title: 'Due Date',\n          format: 'date'\n        },\n        invoice_date: {\n          type: 'string',\n          title: 'Invoice Date',\n          format: 'date'\n        },\n        invoice_id: {\n          type: 'string',\n          title: 'Invoice Id'\n        },\n        invoice_total: {\n          type: 'string',\n          title: 'Invoice Total'\n        },\n        items: {\n          type: 'array',\n          title: 'Items',\n          items: {\n            type: 'object',\n            title: 'LineItem',\n            properties: {\n              amount: {\n                type: 'string',\n                title: 'Amount'\n              },\n              date: {\n                type: 'null',\n                title: 'Date'\n              },\n              description: {\n                type: 'string',\n                title: 'Description'\n              },\n              product_code: {\n                type: 'string',\n                title: 'Product Code'\n              },\n              quantity: {\n                type: 'string',\n                title: 'Quantity'\n              },\n              tax: {\n                type: 'string',\n                title: 'Tax'\n              },\n              tax_rate: {\n                type: 'string',\n                title: 'Tax Rate'\n              },\n              unit: {\n                $ref: '#/$defs/unit_of_measure_code'\n              },\n              unit_price: {\n                type: 'string',\n                title: 'Unit Price'\n              }\n            }\n          }\n        },\n        note: {\n          type: 'string',\n          title: 'Note'\n        },\n        payment_details: {\n          type: 'array',\n          title: 'Payment Details',\n          items: {\n            type: 'object',\n            title: 'PaymentDetail',\n            properties: {\n              bank_account_number: {\n                type: 'string',\n                title: 'Bank Account Number'\n              },\n              iban: {\n                type: 'string',\n                title: 'Iban'\n              },\n              payment_reference: {\n                type: 'string',\n                title: 'Payment Reference'\n              },\n              swift: {\n                type: 'string',\n                title: 'Swift'\n              }\n            }\n          }\n        },\n        payment_term: {\n          type: 'string',\n          title: 'Payment Term'\n        },\n        previous_unpaid_balance: {\n          type: 'string',\n          title: 'Previous Unpaid Balance'\n        },\n        purchase_order: {\n          type: 'string',\n          title: 'Purchase Order'\n        },\n        remittance_address: {\n          type: 'string',\n          title: 'Remittance Address'\n        },\n        remittance_address_recipient: {\n          type: 'string',\n          title: 'Remittance Address Recipient'\n        },\n        service_address: {\n          type: 'string',\n          title: 'Service Address'\n        },\n        service_address_recipient: {\n          type: 'string',\n          title: 'Service Address Recipient'\n        },\n        service_end_date: {\n          type: 'string',\n          title: 'Service End Date',\n          format: 'date'\n        },\n        service_start_date: {\n          type: 'string',\n          title: 'Service Start Date',\n          format: 'date'\n        },\n        shipping_address: {\n          type: 'string',\n          title: 'Shipping Address'\n        },\n        shipping_address_recipient: {\n          type: 'string',\n          title: 'Shipping Address Recipient'\n        },\n        state: {\n          $ref: '#/$defs/document_state'\n        },\n        subtotal: {\n          type: 'string',\n          title: 'Subtotal'\n        },\n        tax_details: {\n          type: 'array',\n          title: 'Tax Details',\n          items: {\n            type: 'object',\n            title: 'TaxDetail',\n            properties: {\n              amount: {\n                type: 'string',\n                title: 'Amount'\n              },\n              rate: {\n                type: 'string',\n                title: 'Rate'\n              }\n            }\n          }\n        },\n        total_discount: {\n          type: 'string',\n          title: 'Total Discount'\n        },\n        total_tax: {\n          type: 'string',\n          title: 'Total Tax'\n        },\n        vendor_address: {\n          type: 'string',\n          title: 'Vendor Address'\n        },\n        vendor_address_recipient: {\n          type: 'string',\n          title: 'Vendor Address Recipient'\n        },\n        vendor_email: {\n          type: 'string',\n          title: 'Vendor Email'\n        },\n        vendor_name: {\n          type: 'string',\n          title: 'Vendor Name'\n        },\n        vendor_tax_id: {\n          type: 'string',\n          title: 'Vendor Tax Id'\n        }\n      },\n      required: [        'id'\n      ]\n    },\n    document_attachment: {\n      type: 'object',\n      title: 'DocumentAttachment',\n      properties: {\n        id: {\n          type: 'string',\n          title: 'Id'\n        },\n        file_name: {\n          type: 'string',\n          title: 'File Name'\n        },\n        file_size: {\n          type: 'integer',\n          title: 'File Size'\n        },\n        file_type: {\n          type: 'string',\n          title: 'File Type'\n        },\n        file_url: {\n          type: 'string',\n          title: 'File Url'\n        }\n      },\n      required: [        'id',\n        'file_name'\n      ]\n    },\n    currency_code: {\n      type: 'string',\n      title: 'CurrencyCode',\n      enum: [        'EUR',\n        'USD',\n        'GBP',\n        'JPY',\n        'CHF',\n        'CAD',\n        'AUD',\n        'NZD',\n        'CNY',\n        'INR',\n        'SEK',\n        'NOK',\n        'DKK',\n        'SGD',\n        'HKD'\n      ]\n    },\n    document_direction: {\n      type: 'string',\n      title: 'DocumentDirection',\n      enum: [        'INBOUND',\n        'OUTBOUND'\n      ]\n    },\n    document_type: {\n      type: 'string',\n      title: 'DocumentType',\n      enum: [        'INVOICE',\n        'CREDIT_NOTE',\n        'DEBIT_NOTE'\n      ]\n    },\n    unit_of_measure_code: {\n      type: 'string',\n      title: 'UnitOfMeasureCode',\n      description: 'Unit of Measure Codes from UNECERec20 used in Peppol BIS Billing 3.0.',\n      enum: [        '10',\n        '11',\n        '13',\n        '14',\n        '15',\n        '20',\n        '21',\n        '22',\n        '23',\n        '24',\n        '25',\n        '27',\n        '28',\n        '33',\n        '34',\n        '35',\n        '37',\n        '38',\n        '40',\n        '41',\n        '56',\n        '57',\n        '58',\n        '59',\n        '60',\n        '61',\n        '74',\n        '77',\n        '80',\n        '81',\n        '85',\n        '87',\n        '89',\n        '91',\n        '1I',\n        'EA',\n        'E01',\n        'E07',\n        'E09',\n        'E10',\n        'E12',\n        'E14',\n        'E17',\n        'E20',\n        'E23',\n        'E25',\n        'E27',\n        'E31',\n        'E34',\n        'E35',\n        'E36',\n        'E37',\n        'E38',\n        'E39',\n        'E40',\n        'E41',\n        'E42',\n        'E43',\n        'E44',\n        'E45',\n        'E46',\n        'E47',\n        'E48',\n        'E49',\n        'E50',\n        'E51',\n        'E52',\n        'E53',\n        'E54',\n        'E55',\n        'E56',\n        'E57',\n        'E58',\n        'E60',\n        'E62',\n        'E65',\n        'E66',\n        'E67',\n        'E69',\n        'E70',\n        'E71',\n        'E73',\n        'E75',\n        'E76',\n        '2A',\n        '2B',\n        '2C',\n        'ZZ',\n        'NAR',\n        'C62'\n      ]\n    },\n    document_state: {\n      type: 'string',\n      title: 'DocumentState',\n      enum: [        'DRAFT',\n        'TRANSIT',\n        'FAILED',\n        'SENT',\n        'RECEIVED'\n      ]\n    }\n  }\n}\n```",
  inputSchema: {
    type: 'object',
    properties: {
      document_id: {
        type: 'string',
        title: 'Document Id',
      },
      jq_filter: {
        type: 'string',
        title: 'jq Filter',
        description:
          'A jq filter to apply to the response to include certain fields. Consult the output schema in the tool description to see the fields that are available.\n\nFor example: to include only the `name` field in every object of a results array, you can provide ".results[].name".\n\nFor more information, see the [jq documentation](https://jqlang.org/manual/).',
      },
    },
    required: ['document_id'],
  },
  annotations: {
    readOnlyHint: true,
  },
};

export const handler = async (client: EInvoice, args: Record<string, unknown> | undefined) => {
  const { document_id, ...body } = args as any;
  return asTextContentResult(await maybeFilter(args, await client.documents.retrieve(document_id)));
};

export default { metadata, tool, handler };
