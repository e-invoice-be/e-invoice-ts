// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'e-invoice-api-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import EInvoice from 'e-invoice-api';

export const metadata: Metadata = {
  resource: 'validate',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/api/validate/json',
  operationId: 'validate_json_api_validate_json_post',
};

export const tool: Tool = {
  name: 'validate_json_validate',
  description: 'Validate if the JSON document can be converted to a valid UBL document',
  inputSchema: {
    type: 'object',
    properties: {
      allowances: {
        type: 'array',
        title: 'Allowances',
        items: {
          type: 'object',
          title: 'Allowance',
          description: 'An allowance is a discount for example for early payment, volume discount, etc.',
          properties: {
            amount: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Amount',
              description: 'The allowance amount, without VAT. Must be rounded to maximum 2 decimals',
            },
            base_amount: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Base Amount',
              description:
                'The base amount that may be used, in conjunction with the allowance percentage, to calculate the allowance amount. Must be rounded to maximum 2 decimals',
            },
            multiplier_factor: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Multiplier Factor',
              description:
                'The percentage that may be used, in conjunction with the allowance base amount, to calculate the allowance amount. To state 20%, use value 20',
            },
            reason: {
              type: 'string',
              title: 'Reason',
              description: 'The reason for the allowance',
            },
            reason_code: {
              type: 'string',
              title: 'Reason Code',
              description: 'The code for the allowance reason',
            },
            tax_code: {
              type: 'string',
              title: 'TaxCategoryCode',
              description:
                'Duty or tax or fee category codes (Subset of UNCL5305)\n\nAgency: UN/CEFACT\nVersion: D.16B\nSubset: OpenPEPPOL',
              enum: ['AE', 'E', 'S', 'Z', 'G', 'O', 'K', 'L', 'M', 'B'],
            },
            tax_rate: {
              type: 'string',
              title: 'Tax Rate',
              description: 'The VAT rate, represented as percentage that applies to the allowance',
            },
          },
        },
      },
      amount_due: {
        anyOf: [
          {
            type: 'number',
          },
          {
            type: 'string',
          },
        ],
        title: 'Amount Due',
        description: 'The amount due of the invoice. Must be positive and rounded to maximum 2 decimals',
      },
      attachments: {
        type: 'array',
        title: 'Attachments',
        items: {
          $ref: '#/$defs/document_attachment_create',
        },
      },
      billing_address: {
        type: 'string',
        title: 'Billing Address',
      },
      billing_address_recipient: {
        type: 'string',
        title: 'Billing Address Recipient',
      },
      charges: {
        type: 'array',
        title: 'Charges',
        items: {
          type: 'object',
          title: 'Charge',
          description: 'A charge is an additional fee for example for late payment, late delivery, etc.',
          properties: {
            amount: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Amount',
              description: 'The charge amount, without VAT. Must be rounded to maximum 2 decimals',
            },
            base_amount: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Base Amount',
              description:
                'The base amount that may be used, in conjunction with the charge percentage, to calculate the charge amount. Must be rounded to maximum 2 decimals',
            },
            multiplier_factor: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Multiplier Factor',
              description:
                'The percentage that may be used, in conjunction with the charge base amount, to calculate the charge amount. To state 20%, use value 20',
            },
            reason: {
              type: 'string',
              title: 'Reason',
              description: 'The reason for the charge',
            },
            reason_code: {
              type: 'string',
              title: 'Reason Code',
              description: 'The code for the charge reason',
            },
            tax_code: {
              type: 'string',
              title: 'TaxCategoryCode',
              description:
                'Duty or tax or fee category codes (Subset of UNCL5305)\n\nAgency: UN/CEFACT\nVersion: D.16B\nSubset: OpenPEPPOL',
              enum: ['AE', 'E', 'S', 'Z', 'G', 'O', 'K', 'L', 'M', 'B'],
            },
            tax_rate: {
              type: 'string',
              title: 'Tax Rate',
              description: 'The VAT rate, represented as percentage that applies to the charge',
            },
          },
        },
      },
      currency: {
        $ref: '#/$defs/currency_code',
      },
      customer_address: {
        type: 'string',
        title: 'Customer Address',
      },
      customer_address_recipient: {
        type: 'string',
        title: 'Customer Address Recipient',
      },
      customer_email: {
        type: 'string',
        title: 'Customer Email',
      },
      customer_id: {
        type: 'string',
        title: 'Customer Id',
      },
      customer_name: {
        type: 'string',
        title: 'Customer Name',
      },
      customer_tax_id: {
        type: 'string',
        title: 'Customer Tax Id',
      },
      direction: {
        $ref: '#/$defs/document_direction',
      },
      document_type: {
        $ref: '#/$defs/document_type',
      },
      due_date: {
        type: 'string',
        title: 'Due Date',
        format: 'date',
      },
      invoice_date: {
        type: 'string',
        title: 'Invoice Date',
        format: 'date',
      },
      invoice_id: {
        type: 'string',
        title: 'Invoice Id',
      },
      invoice_total: {
        anyOf: [
          {
            type: 'number',
          },
          {
            type: 'string',
          },
        ],
        title: 'Invoice Total',
        description:
          'The total amount of the invoice (so invoice_total = subtotal + total_tax + total_discount). Must be positive and rounded to maximum 2 decimals',
      },
      items: {
        type: 'array',
        title: 'Items',
        description: 'At least one line item is required',
        items: {
          type: 'object',
          title: 'LineItemCreate',
          properties: {
            allowances: {
              type: 'array',
              title: 'Allowances',
              description: 'The allowances of the line item.',
              items: {
                type: 'object',
                title: 'Allowance',
                description:
                  'An allowance is a discount for example for early payment, volume discount, etc.',
                properties: {
                  amount: {
                    anyOf: [
                      {
                        type: 'number',
                      },
                      {
                        type: 'string',
                      },
                    ],
                    title: 'Amount',
                    description: 'The allowance amount, without VAT. Must be rounded to maximum 2 decimals',
                  },
                  base_amount: {
                    anyOf: [
                      {
                        type: 'number',
                      },
                      {
                        type: 'string',
                      },
                    ],
                    title: 'Base Amount',
                    description:
                      'The base amount that may be used, in conjunction with the allowance percentage, to calculate the allowance amount. Must be rounded to maximum 2 decimals',
                  },
                  multiplier_factor: {
                    anyOf: [
                      {
                        type: 'number',
                      },
                      {
                        type: 'string',
                      },
                    ],
                    title: 'Multiplier Factor',
                    description:
                      'The percentage that may be used, in conjunction with the allowance base amount, to calculate the allowance amount. To state 20%, use value 20',
                  },
                  reason: {
                    type: 'string',
                    title: 'Reason',
                    description: 'The reason for the allowance',
                  },
                  reason_code: {
                    type: 'string',
                    title: 'Reason Code',
                    description: 'The code for the allowance reason',
                  },
                  tax_code: {
                    type: 'string',
                    title: 'TaxCategoryCode',
                    description:
                      'Duty or tax or fee category codes (Subset of UNCL5305)\n\nAgency: UN/CEFACT\nVersion: D.16B\nSubset: OpenPEPPOL',
                    enum: ['AE', 'E', 'S', 'Z', 'G', 'O', 'K', 'L', 'M', 'B'],
                  },
                  tax_rate: {
                    type: 'string',
                    title: 'Tax Rate',
                    description: 'The VAT rate, represented as percentage that applies to the allowance',
                  },
                },
              },
            },
            amount: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Amount',
              description:
                'The total amount of the line item, exclusive of VAT, after subtracting line level allowances and adding line level charges. Must be rounded to maximum 2 decimals',
            },
            charges: {
              type: 'array',
              title: 'Charges',
              description: 'The charges of the line item.',
              items: {
                type: 'object',
                title: 'Charge',
                description:
                  'A charge is an additional fee for example for late payment, late delivery, etc.',
                properties: {
                  amount: {
                    anyOf: [
                      {
                        type: 'number',
                      },
                      {
                        type: 'string',
                      },
                    ],
                    title: 'Amount',
                    description: 'The charge amount, without VAT. Must be rounded to maximum 2 decimals',
                  },
                  base_amount: {
                    anyOf: [
                      {
                        type: 'number',
                      },
                      {
                        type: 'string',
                      },
                    ],
                    title: 'Base Amount',
                    description:
                      'The base amount that may be used, in conjunction with the charge percentage, to calculate the charge amount. Must be rounded to maximum 2 decimals',
                  },
                  multiplier_factor: {
                    anyOf: [
                      {
                        type: 'number',
                      },
                      {
                        type: 'string',
                      },
                    ],
                    title: 'Multiplier Factor',
                    description:
                      'The percentage that may be used, in conjunction with the charge base amount, to calculate the charge amount. To state 20%, use value 20',
                  },
                  reason: {
                    type: 'string',
                    title: 'Reason',
                    description: 'The reason for the charge',
                  },
                  reason_code: {
                    type: 'string',
                    title: 'Reason Code',
                    description: 'The code for the charge reason',
                  },
                  tax_code: {
                    type: 'string',
                    title: 'TaxCategoryCode',
                    description:
                      'Duty or tax or fee category codes (Subset of UNCL5305)\n\nAgency: UN/CEFACT\nVersion: D.16B\nSubset: OpenPEPPOL',
                    enum: ['AE', 'E', 'S', 'Z', 'G', 'O', 'K', 'L', 'M', 'B'],
                  },
                  tax_rate: {
                    type: 'string',
                    title: 'Tax Rate',
                    description: 'The VAT rate, represented as percentage that applies to the charge',
                  },
                },
              },
            },
            date: {
              type: 'null',
              title: 'Date',
            },
            description: {
              type: 'string',
              title: 'Description',
              description: 'The description of the line item.',
            },
            product_code: {
              type: 'string',
              title: 'Product Code',
              description: 'The product code of the line item.',
            },
            quantity: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Quantity',
              description:
                'The quantity of items (goods or services) that is the subject of the line item. Must be rounded to maximum 4 decimals',
            },
            tax: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Tax',
              description: 'The total VAT amount for the line item. Must be rounded to maximum 2 decimals',
            },
            tax_rate: {
              type: 'string',
              title: 'Tax Rate',
              description: 'The VAT rate of the line item expressed as percentage with 2 decimals',
            },
            unit: {
              $ref: '#/$defs/unit_of_measure_code',
            },
            unit_price: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Unit Price',
              description: 'The unit price of the line item. Must be rounded to maximum 2 decimals',
            },
          },
        },
      },
      note: {
        type: 'string',
        title: 'Note',
      },
      payment_details: {
        type: 'array',
        title: 'Payment Details',
        items: {
          $ref: '#/$defs/payment_detail_create',
        },
      },
      payment_term: {
        type: 'string',
        title: 'Payment Term',
      },
      previous_unpaid_balance: {
        anyOf: [
          {
            type: 'number',
          },
          {
            type: 'string',
          },
        ],
        title: 'Previous Unpaid Balance',
        description:
          'The previous unpaid balance of the invoice, if any. Must be positive and rounded to maximum 2 decimals',
      },
      purchase_order: {
        type: 'string',
        title: 'Purchase Order',
      },
      remittance_address: {
        type: 'string',
        title: 'Remittance Address',
      },
      remittance_address_recipient: {
        type: 'string',
        title: 'Remittance Address Recipient',
      },
      service_address: {
        type: 'string',
        title: 'Service Address',
      },
      service_address_recipient: {
        type: 'string',
        title: 'Service Address Recipient',
      },
      service_end_date: {
        type: 'string',
        title: 'Service End Date',
        format: 'date',
      },
      service_start_date: {
        type: 'string',
        title: 'Service Start Date',
        format: 'date',
      },
      shipping_address: {
        type: 'string',
        title: 'Shipping Address',
      },
      shipping_address_recipient: {
        type: 'string',
        title: 'Shipping Address Recipient',
      },
      state: {
        $ref: '#/$defs/document_state',
      },
      subtotal: {
        anyOf: [
          {
            type: 'number',
          },
          {
            type: 'string',
          },
        ],
        title: 'Subtotal',
        description:
          'The taxable base of the invoice. Should be the sum of all line items - allowances (for example commercial discounts) + charges with impact on VAT. Must be positive and rounded to maximum 2 decimals',
      },
      tax_code: {
        type: 'string',
        title: 'TaxCategoryCode',
        description: 'Tax category code of the invoice',
        enum: ['AE', 'E', 'S', 'Z', 'G', 'O', 'K', 'L', 'M', 'B'],
      },
      tax_details: {
        type: 'array',
        title: 'Tax Details',
        items: {
          type: 'object',
          title: 'TaxDetailCreate',
          properties: {
            amount: {
              anyOf: [
                {
                  type: 'number',
                },
                {
                  type: 'string',
                },
              ],
              title: 'Amount',
            },
            rate: {
              type: 'string',
              title: 'Rate',
            },
          },
        },
      },
      total_discount: {
        anyOf: [
          {
            type: 'number',
          },
          {
            type: 'string',
          },
        ],
        title: 'Total Discount',
        description:
          'The total financial discount of the invoice (so discounts not subject to VAT). Must be positive and rounded to maximum 2 decimals',
      },
      total_tax: {
        anyOf: [
          {
            type: 'number',
          },
          {
            type: 'string',
          },
        ],
        title: 'Total Tax',
        description: 'The total tax of the invoice. Must be positive and rounded to maximum 2 decimals',
      },
      vatex: {
        type: 'string',
        title: 'VATExemptionCode',
        description: 'VATEX code list for VAT exemption reasons\n\nAgency: CEF\nIdentifier: vatex',
        enum: [
          'VATEX-EU-79-C',
          'VATEX-EU-132',
          'VATEX-EU-132-1A',
          'VATEX-EU-132-1B',
          'VATEX-EU-132-1C',
          'VATEX-EU-132-1D',
          'VATEX-EU-132-1E',
          'VATEX-EU-132-1F',
          'VATEX-EU-132-1G',
          'VATEX-EU-132-1H',
          'VATEX-EU-132-1I',
          'VATEX-EU-132-1J',
          'VATEX-EU-132-1K',
          'VATEX-EU-132-1L',
          'VATEX-EU-132-1M',
          'VATEX-EU-132-1N',
          'VATEX-EU-132-1O',
          'VATEX-EU-132-1P',
          'VATEX-EU-132-1Q',
          'VATEX-EU-143',
          'VATEX-EU-143-1A',
          'VATEX-EU-143-1B',
          'VATEX-EU-143-1C',
          'VATEX-EU-143-1D',
          'VATEX-EU-143-1E',
          'VATEX-EU-143-1F',
          'VATEX-EU-143-1FA',
          'VATEX-EU-143-1G',
          'VATEX-EU-143-1H',
          'VATEX-EU-143-1I',
          'VATEX-EU-143-1J',
          'VATEX-EU-143-1K',
          'VATEX-EU-143-1L',
          'VATEX-EU-144',
          'VATEX-EU-146-1E',
          'VATEX-EU-148',
          'VATEX-EU-148-A',
          'VATEX-EU-148-B',
          'VATEX-EU-148-C',
          'VATEX-EU-148-D',
          'VATEX-EU-148-E',
          'VATEX-EU-148-F',
          'VATEX-EU-148-G',
          'VATEX-EU-151',
          'VATEX-EU-151-1A',
          'VATEX-EU-151-1AA',
          'VATEX-EU-151-1B',
          'VATEX-EU-151-1C',
          'VATEX-EU-151-1D',
          'VATEX-EU-151-1E',
          'VATEX-EU-159',
          'VATEX-EU-309',
          'VATEX-EU-AE',
          'VATEX-EU-D',
          'VATEX-EU-F',
          'VATEX-EU-G',
          'VATEX-EU-I',
          'VATEX-EU-IC',
          'VATEX-EU-O',
          'VATEX-EU-J',
          'VATEX-FR-FRANCHISE',
          'VATEX-FR-CNWVAT',
        ],
      },
      vatex_note: {
        type: 'string',
        title: 'Vatex Note',
        description: 'VAT exemption note of the invoice',
      },
      vendor_address: {
        type: 'string',
        title: 'Vendor Address',
      },
      vendor_address_recipient: {
        type: 'string',
        title: 'Vendor Address Recipient',
      },
      vendor_email: {
        type: 'string',
        title: 'Vendor Email',
      },
      vendor_name: {
        type: 'string',
        title: 'Vendor Name',
      },
      vendor_tax_id: {
        type: 'string',
        title: 'Vendor Tax Id',
      },
    },
    required: [],
    $defs: {
      document_attachment_create: {
        type: 'object',
        title: 'DocumentAttachmentCreate',
        properties: {
          file_name: {
            type: 'string',
            title: 'File Name',
          },
          file_data: {
            type: 'string',
            title: 'File Data',
            description: 'Base64 encoded file data',
          },
          file_size: {
            type: 'integer',
            title: 'File Size',
          },
          file_type: {
            type: 'string',
            title: 'File Type',
          },
        },
        required: ['file_name'],
      },
      currency_code: {
        type: 'string',
        title: 'CurrencyCode',
        enum: [
          'EUR',
          'USD',
          'GBP',
          'JPY',
          'CHF',
          'CAD',
          'AUD',
          'NZD',
          'CNY',
          'INR',
          'SEK',
          'NOK',
          'DKK',
          'SGD',
          'HKD',
        ],
      },
      document_direction: {
        type: 'string',
        title: 'DocumentDirection',
        enum: ['INBOUND', 'OUTBOUND'],
      },
      document_type: {
        type: 'string',
        title: 'DocumentType',
        enum: ['INVOICE', 'CREDIT_NOTE', 'DEBIT_NOTE'],
      },
      unit_of_measure_code: {
        type: 'string',
        title: 'UnitOfMeasureCode',
        description: 'Unit of Measure Codes from UNECERec20 used in Peppol BIS Billing 3.0.',
        enum: [
          '10',
          '11',
          '13',
          '14',
          '15',
          '20',
          '21',
          '22',
          '23',
          '24',
          '25',
          '27',
          '28',
          '33',
          '34',
          '35',
          '37',
          '38',
          '40',
          '41',
          '56',
          '57',
          '58',
          '59',
          '60',
          '61',
          '74',
          '77',
          '80',
          '81',
          '85',
          '87',
          '89',
          '91',
          '1I',
          'EA',
          'E01',
          'E07',
          'E09',
          'E10',
          'E12',
          'E14',
          'E17',
          'E20',
          'E23',
          'E25',
          'E27',
          'E31',
          'E34',
          'E35',
          'E36',
          'E37',
          'E38',
          'E39',
          'E40',
          'E41',
          'E42',
          'E43',
          'E44',
          'E45',
          'E46',
          'E47',
          'E48',
          'E49',
          'E50',
          'E51',
          'E52',
          'E53',
          'E54',
          'E55',
          'E56',
          'E57',
          'E58',
          'E60',
          'E62',
          'E65',
          'E66',
          'E67',
          'E69',
          'E70',
          'E71',
          'E73',
          'E75',
          'E76',
          '2A',
          '2B',
          '2C',
          '2G',
          '2H',
          '2I',
          '2J',
          '2K',
          '2L',
          '2M',
          '2N',
          '2P',
          '2Q',
          '2R',
          '2U',
          '2X',
          '2Y',
          '2Z',
          '3B',
          '3C',
          '4C',
          '4G',
          '4H',
          '4K',
          '4L',
          '4M',
          '4N',
          '4O',
          '4P',
          '4Q',
          '4R',
          '4T',
          '4U',
          '4W',
          '4X',
          '5A',
          '5B',
          '5E',
          '5J',
          'A10',
          'A11',
          'A12',
          'A13',
          'A14',
          'A15',
          'A16',
          'A17',
          'A18',
          'A19',
          'A2',
          'A20',
          'A21',
          'A22',
          'A23',
          'A24',
          'A26',
          'A27',
          'A28',
          'A29',
          'A3',
          'A30',
          'A31',
          'A32',
          'A33',
          'A34',
          'A35',
          'A36',
          'A37',
          'A38',
          'A39',
          'A4',
          'A40',
          'A41',
          'A42',
          'A43',
          'A44',
          'A45',
          'A46',
          'A47',
          'A48',
          'A49',
          'A5',
          'A50',
          'A51',
          'A52',
          'A53',
          'A54',
          'A55',
          'A56',
          'A57',
          'A58',
          'A59',
          'A6',
          'A60',
          'A61',
          'A62',
          'A63',
          'A64',
          'A65',
          'A66',
          'A67',
          'A68',
          'A69',
          'A7',
          'A70',
          'A71',
          'A72',
          'A73',
          'A74',
          'A75',
          'A76',
          'A77',
          'A78',
          'A79',
          'A8',
          'A80',
          'A81',
          'A82',
          'A83',
          'A84',
          'A85',
          'A86',
          'A87',
          'A88',
          'A89',
          'A9',
          'A90',
          'A91',
          'A92',
          'A93',
          'A94',
          'A95',
          'A96',
          'A97',
          'A98',
          'A99',
          'ACR',
          'AH',
          'AI',
          'AK',
          'AMH',
          'AMT',
          'ANN',
          'B1',
          'B11',
          'B12',
          'B13',
          'B14',
          'B15',
          'B16',
          'B17',
          'B18',
          'B19',
          'B20',
          'B21',
          'B22',
          'B23',
          'B24',
          'B25',
          'B26',
          'B27',
          'B28',
          'B29',
          'B3',
          'B30',
          'B31',
          'B32',
          'B33',
          'B34',
          'B35',
          'B36',
          'B37',
          'B38',
          'B39',
          'B4',
          'B40',
          'B41',
          'B42',
          'B43',
          'B44',
          'B45',
          'B46',
          'B47',
          'B48',
          'B49',
          'B5',
          'B50',
          'B52',
          'B53',
          'B54',
          'B55',
          'B56',
          'B57',
          'B58',
          'B59',
          'B6',
          'B60',
          'B61',
          'B62',
          'B63',
          'B64',
          'B65',
          'B66',
          'B67',
          'B68',
          'B69',
          'B7',
          'B70',
          'B71',
          'B72',
          'B73',
          'B74',
          'B75',
          'B76',
          'B77',
          'B78',
          'B79',
          'B8',
          'B80',
          'B81',
          'B82',
          'B83',
          'B84',
          'B85',
          'B86',
          'B87',
          'B88',
          'B89',
          'B9',
          'B90',
          'B91',
          'B92',
          'B93',
          'B94',
          'B95',
          'B96',
          'B97',
          'B98',
          'B99',
          'BAR',
          'BB',
          'BFT',
          'BHP',
          'BIL',
          'BLD',
          'BLL',
          'BUA',
          'BUI',
          'C0',
          'C10',
          'C11',
          'C12',
          'C13',
          'C14',
          'C15',
          'C16',
          'C17',
          'C18',
          'C19',
          'C20',
          'C21',
          'C22',
          'C23',
          'C24',
          'C25',
          'C26',
          'C27',
          'C28',
          'C29',
          'C30',
          'C31',
          'C32',
          'C33',
          'C34',
          'C35',
          'C36',
          'C37',
          'C38',
          'C39',
          'C40',
          'C41',
          'C42',
          'C43',
          'C44',
          'C45',
          'C46',
          'C47',
          'C48',
          'C49',
          'C50',
          'C51',
          'C52',
          'C53',
          'C54',
          'C55',
          'C56',
          'C57',
          'C58',
          'C59',
          'C60',
          'C61',
          'C63',
          'C64',
          'C65',
          'C66',
          'C67',
          'C68',
          'C69',
          'C70',
          'C71',
          'C72',
          'C73',
          'C74',
          'C75',
          'C76',
          'C77',
          'C78',
          'C79',
          'C80',
          'C81',
          'C82',
          'C83',
          'C84',
          'C85',
          'C86',
          'C87',
          'C88',
          'C89',
          'C90',
          'C91',
          'C92',
          'C93',
          'C94',
          'C95',
          'C96',
          'C97',
          'C98',
          'C99',
          'CDL',
          'CEL',
          'CHU',
          'CIU',
          'CLT',
          'CMK',
          'CMQ',
          'CMT',
          'CNP',
          'CNT',
          'COU',
          'CTG',
          'CTN',
          'CUR',
          'CWA',
          'CWI',
          'DAN',
          'DAY',
          'DB',
          'DD',
          'DG',
          'DI',
          'DLT',
          'DMK',
          'DMQ',
          'DMT',
          'DPC',
          'DPT',
          'DRA',
          'DZN',
          'DZP',
          'FOT',
          'GLL',
          'GLI',
          'GRM',
          'GRO',
          'HUR',
          'HTZ',
          'INH',
          'KGM',
          'KMT',
          'MTR',
          'SMI',
          'MIN',
          'MON',
          'ONZ',
          'PCE',
          'LBR',
          'QT',
          'SEC',
          'FTK',
          'INK',
          'MTK',
          'YDK',
          'TNE',
          'VLT',
          'WTT',
          'YRD',
          'FTQ',
          'INQ',
          'MTQ',
          'YDQ',
          'HAR',
          'KLT',
          'MLT',
          'MMT',
          'KMK',
          'MMK',
          'XAA',
          'XAB',
          'XAC',
          'XAD',
          'XAE',
          'XAF',
          'XAG',
          'XAH',
          'XAI',
          'XAJ',
          'XAL',
          'XAM',
          'XAP',
          'XAT',
          'XAV',
          'XB4',
          'XBA',
          'XBB',
          'XBC',
          'XBD',
          'XBE',
          'XBF',
          'XBG',
          'XBH',
          'XBI',
          'XBJ',
          'XBK',
          'XBL',
          'XBM',
          'XBN',
          'XBO',
          'XBP',
          'XBQ',
          'XBR',
          'XBS',
          'XBT',
          'XBU',
          'XBV',
          'XBW',
          'XBX',
          'XBY',
          'XBZ',
          'XCA',
          'XCB',
          'XCC',
          'XCD',
          'XCE',
          'XCF',
          'XCG',
          'XCH',
          'XCI',
          'XCJ',
          'XCK',
          'XCL',
          'XCM',
          'XCN',
          'XCO',
          'XCP',
          'XCQ',
          'XCR',
          'XCS',
          'XCT',
          'XCU',
          'XCV',
          'XCW',
          'XCX',
          'XCY',
          'XCZ',
          'XDA',
          'XDB',
          'XDC',
          'XDD',
          'XDE',
          'XDF',
          'XDG',
          'XDH',
          'XDI',
          'XDJ',
          'XDK',
          'XDL',
          'XDM',
          'XDN',
          'XDP',
          'XDQ',
          'XDR',
          'XDS',
          'XDT',
          'XDU',
          'XDV',
          'XDW',
          'XDX',
          'XDY',
          'XDZ',
          'XEA',
          'XEB',
          'XEC',
          'XED',
          'XEE',
          'XEF',
          'XEG',
          'XEH',
          'XEI',
          'XEJ',
          'XEK',
          'XEL',
          'XEM',
          'XEN',
          'XEP',
          'XEQ',
          'XER',
          'XES',
          'XET',
          'XEU',
          'XEV',
          'XEW',
          'XEX',
          'XEY',
          'XFB',
          'XFC',
          'XFD',
          'XFE',
          'XFF',
          'XFG',
          'XFH',
          'XFI',
          'XFJ',
          'XFK',
          'XFL',
          'XFM',
          'XFN',
          'XFO',
          'XFP',
          'XFQ',
          'XFR',
          'XFS',
          'XFT',
          'XFU',
          'XFV',
          'XFW',
          'XFX',
          'XFY',
          'XFZ',
          'XGA',
          'XGB',
          'XGC',
          'XGD',
          'XGE',
          'XGF',
          'XGG',
          'XGH',
          'XGI',
          'XGJ',
          'XGK',
          'XGL',
          'XGM',
          'XGN',
          'XGO',
          'XGP',
          'XGQ',
          'XGR',
          'XGS',
          'XGT',
          'XGU',
          'XGV',
          'XGW',
          'XGX',
          'XGY',
          'XGZ',
          'XHA',
          'XHB',
          'XHC',
          'XHD',
          'XHE',
          'XHF',
          'XHG',
          'XHH',
          'XHI',
          'XHJ',
          'XHK',
          'XHL',
          'XHM',
          'XHN',
          'XHP',
          'XHQ',
          'XHR',
          'XHS',
          'XHT',
          'XHU',
          'XHV',
          'XHW',
          'XHX',
          'XHY',
          'XHZ',
          'XIA',
          'XIB',
          'XIC',
          'XID',
          'XIE',
          'XIF',
          'XIG',
          'XIH',
          'XII',
          'XIJ',
          'XIK',
          'XIL',
          'XIM',
          'XIN',
          'XIO',
          'XJA',
          'XJB',
          'XJC',
          'XJD',
          'XJE',
          'XJF',
          'XJG',
          'XJH',
          'XJI',
          'XJJ',
          'XJK',
          'XJL',
          'XJM',
          'XJN',
          'XJO',
          'XJP',
          'XJQ',
          'XJR',
          'XJS',
          'XJT',
          'XJU',
          'XJV',
          'XJW',
          'XJX',
          'XJY',
          'XJZ',
          'XLA',
          'XLB',
          'XLC',
          'XLD',
          'XLE',
          'XLF',
          'XLG',
          'XLH',
          'XLI',
          'XLJ',
          'XLK',
          'XLL',
          'XLM',
          'XLN',
          'XLO',
          'XLP',
          'XLQ',
          'XLR',
          'XLS',
          'XLT',
          'XLU',
          'XLV',
          'XLW',
          'XLX',
          'XLY',
          'XLZ',
          'XMA',
          'XMB',
          'XMC',
          'XMD',
          'XME',
          'XMF',
          'XMG',
          'XMH',
          'XMI',
          'XMJ',
          'XMK',
          'XML',
          'XMM',
          'XMN',
          'XMO',
          'XMP',
          'XMQ',
          'XMR',
          'XMS',
          'XMT',
          'XMU',
          'XMV',
          'XMW',
          'XMX',
          'XMY',
          'XMZ',
          'XNA',
          'XNB',
          'XNC',
          'XND',
          'XNE',
          'XNF',
          'XNG',
          'XNH',
          'XNI',
          'XNJ',
          'XNK',
          'XNL',
          'XNM',
          'XOA',
          'XOB',
          'XOC',
          'XOD',
          'XOE',
          'XOF',
          'XOG',
          'XOH',
          'XOI',
          'XOJ',
          'XOK',
          'XOL',
          'XOM',
          'XON',
          'XOO',
          'XOP',
          'XOQ',
          'XOR',
          'XOS',
          'XOT',
          'XOU',
          'XOV',
          'XOW',
          'XOX',
          'XOY',
          'XOZ',
          'XP1',
          'XP2',
          'XP3',
          'XP4',
          'XPA',
          'XPB',
          'XPC',
          'XPD',
          'XPE',
          'XPF',
          'XPG',
          'XPH',
          'XPI',
          'XPJ',
          'XPK',
          'XPL',
          'XPM',
          'XPN',
          'XPO',
          'XPP',
          'XPQ',
          'XPR',
          'XPS',
          'XPT',
          'XPU',
          'XPV',
          'XPW',
          'XPX',
          'XPY',
          'XPZ',
          'XQA',
          'XQB',
          'XQC',
          'XQD',
          'XQE',
          'XQF',
          'XQG',
          'XQH',
          'XQI',
          'XQJ',
          'XQK',
          'XQL',
          'XQM',
          'XQN',
          'XQO',
          'XQP',
          'XQQ',
          'XQR',
          'XQS',
          'XRD',
          'XRE',
          'XRF',
          'XRG',
          'XRH',
          'XRI',
          'XRJ',
          'XRK',
          'XRL',
          'XRM',
          'XRN',
          'XRO',
          'XRP',
          'XRQ',
          'XRR',
          'XRS',
          'XRT',
          'XRU',
          'XRV',
          'XRW',
          'XRX',
          'XRY',
          'XRZ',
          'XSA',
          'XSB',
          'XSC',
          'XSD',
          'XSE',
          'XSF',
          'XSG',
          'XSH',
          'XSI',
          'XSJ',
          'XSK',
          'XSL',
          'XSM',
          'XSN',
          'XSO',
          'XSP',
          'XSQ',
          'XSR',
          'XSS',
          'XST',
          'XSU',
          'XSV',
          'XSW',
          'XSX',
          'XSY',
          'XSZ',
          'XTA',
          'XTB',
          'XTC',
          'XTD',
          'XTE',
          'XTF',
          'XTG',
          'XTI',
          'XTJ',
          'XTK',
          'XTL',
          'XTM',
          'XTN',
          'XTO',
          'XTR',
          'XTS',
          'XTT',
          'XTU',
          'XTV',
          'XTW',
          'XTX',
          'XTY',
          'XTZ',
          'XUC',
          'XUN',
          'XVA',
          'XVG',
          'XVI',
          'XVK',
          'XVL',
          'XVN',
          'XVO',
          'XVP',
          'XVQ',
          'XVR',
          'XVS',
          'XVY',
          'XWA',
          'XWB',
          'XWC',
          'XWD',
          'XWF',
          'XWG',
          'XWH',
          'XWJ',
          'XWK',
          'XWL',
          'XWM',
          'XWN',
          'XWP',
          'XWQ',
          'XWR',
          'XWS',
          'XWT',
          'XWU',
          'XWV',
          'XWW',
          'XWX',
          'XWY',
          'XWZ',
          'XXA',
          'XXB',
          'XXC',
          'XXD',
          'XXF',
          'XXG',
          'XXH',
          'XXJ',
          'XXK',
          'XYA',
          'XYB',
          'XYC',
          'XYD',
          'XYF',
          'XYG',
          'XYH',
          'XYJ',
          'XYK',
          'XYL',
          'XYM',
          'XYN',
          'XYP',
          'XYQ',
          'XYR',
          'XYS',
          'XYT',
          'XYV',
          'XYW',
          'XYX',
          'XYY',
          'XYZ',
          'XZA',
          'XZB',
          'XZC',
          'XZD',
          'XZF',
          'XZG',
          'XZH',
          'XZJ',
          'XZK',
          'XZL',
          'XZM',
          'XZN',
          'XZP',
          'XZQ',
          'XZR',
          'XZS',
          'XZT',
          'XZU',
          'XZV',
          'XZW',
          'XZX',
          'XZY',
          'XZZ',
          'ZZ',
          'NAR',
          'C62',
          'LTR',
        ],
      },
      payment_detail_create: {
        type: 'object',
        title: 'PaymentDetailCreate',
        properties: {
          bank_account_number: {
            type: 'string',
            title: 'Bank Account Number',
          },
          iban: {
            type: 'string',
            title: 'Iban',
          },
          payment_reference: {
            type: 'string',
            title: 'Payment Reference',
          },
          swift: {
            type: 'string',
            title: 'Swift',
          },
        },
      },
      document_state: {
        type: 'string',
        title: 'DocumentState',
        enum: ['DRAFT', 'TRANSIT', 'FAILED', 'SENT', 'RECEIVED'],
      },
    },
  },
  annotations: {},
};

export const handler = async (client: EInvoice, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  return asTextContentResult(await client.validate.validateJson(body));
};

export default { metadata, tool, handler };
